//variables:
//  mainClass
//  libsDir

apply plugin: "application"

mainClassName = mainClass
application.setMainClass(mainClassName)

dependencies {
	shade project(":shared-bootstrap")
}

jar {
	manifest {
		attributes "Main-Class": mainClassName
	}
}

tasks.register("copyDependencies") {
	def libs = file("run/${libsDir}")
	
    inputs.files(configurations.include)
    outputs.dir(libs)
	
    doLast {
        copy {
            from configurations.include
            into libs
        }
    }
}

run {
    dependsOn "copyDependencies"
    
    classpath = files(sourceSets.main.output, configurations.shade)
    
    workingDir = file("run")
    workingDir.mkdirs()
    
    def libsDir = tasks.named("copyDependencies").get().outputs.files.singleFile
    
    def libJars = [libsDir]
    def libClasses = []
    def modJars = []
    def modClasses = []
    
    jvmArgs = [
    	"-Dlib.jars=${libJars.join(';')}",
    	"-Dlib.classes=${libClasses.join(';')}",
    	"-Dmod.jars=${modJars.join(';')}",
    	"-Dmod.classes=${modClasses.join(';')}",
    ]
}
